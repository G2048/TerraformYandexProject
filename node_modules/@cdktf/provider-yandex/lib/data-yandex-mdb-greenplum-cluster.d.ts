import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface DataYandexMdbGreenplumClusterConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_greenplum_cluster#cluster_id DataYandexMdbGreenplumCluster#cluster_id}
    */
    readonly clusterId?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_greenplum_cluster#folder_id DataYandexMdbGreenplumCluster#folder_id}
    */
    readonly folderId?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_greenplum_cluster#greenplum_config DataYandexMdbGreenplumCluster#greenplum_config}
    */
    readonly greenplumConfig?: {
        [key: string]: string;
    };
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_greenplum_cluster#id DataYandexMdbGreenplumCluster#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_greenplum_cluster#name DataYandexMdbGreenplumCluster#name}
    */
    readonly name?: string;
    /**
    * pooler_config block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_greenplum_cluster#pooler_config DataYandexMdbGreenplumCluster#pooler_config}
    */
    readonly poolerConfig?: DataYandexMdbGreenplumClusterPoolerConfig;
}
export interface DataYandexMdbGreenplumClusterAccess {
}
export declare function dataYandexMdbGreenplumClusterAccessToTerraform(struct?: DataYandexMdbGreenplumClusterAccess): any;
export declare class DataYandexMdbGreenplumClusterAccessOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbGreenplumClusterAccess | undefined;
    set internalValue(value: DataYandexMdbGreenplumClusterAccess | undefined);
    get dataLens(): cdktf.IResolvable;
    get webSql(): cdktf.IResolvable;
}
export declare class DataYandexMdbGreenplumClusterAccessList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbGreenplumClusterAccessOutputReference;
}
export interface DataYandexMdbGreenplumClusterBackupWindowStart {
}
export declare function dataYandexMdbGreenplumClusterBackupWindowStartToTerraform(struct?: DataYandexMdbGreenplumClusterBackupWindowStart): any;
export declare class DataYandexMdbGreenplumClusterBackupWindowStartOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbGreenplumClusterBackupWindowStart | undefined;
    set internalValue(value: DataYandexMdbGreenplumClusterBackupWindowStart | undefined);
    get hours(): number;
    get minutes(): number;
}
export declare class DataYandexMdbGreenplumClusterBackupWindowStartList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbGreenplumClusterBackupWindowStartOutputReference;
}
export interface DataYandexMdbGreenplumClusterMasterHosts {
}
export declare function dataYandexMdbGreenplumClusterMasterHostsToTerraform(struct?: DataYandexMdbGreenplumClusterMasterHosts): any;
export declare class DataYandexMdbGreenplumClusterMasterHostsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbGreenplumClusterMasterHosts | undefined;
    set internalValue(value: DataYandexMdbGreenplumClusterMasterHosts | undefined);
    get assignPublicIp(): cdktf.IResolvable;
    get fqdn(): string;
}
export declare class DataYandexMdbGreenplumClusterMasterHostsList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbGreenplumClusterMasterHostsOutputReference;
}
export interface DataYandexMdbGreenplumClusterMasterSubclusterResources {
}
export declare function dataYandexMdbGreenplumClusterMasterSubclusterResourcesToTerraform(struct?: DataYandexMdbGreenplumClusterMasterSubclusterResources): any;
export declare class DataYandexMdbGreenplumClusterMasterSubclusterResourcesOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbGreenplumClusterMasterSubclusterResources | undefined;
    set internalValue(value: DataYandexMdbGreenplumClusterMasterSubclusterResources | undefined);
    get diskSize(): number;
    get diskTypeId(): string;
    get resourcePresetId(): string;
}
export declare class DataYandexMdbGreenplumClusterMasterSubclusterResourcesList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbGreenplumClusterMasterSubclusterResourcesOutputReference;
}
export interface DataYandexMdbGreenplumClusterMasterSubcluster {
}
export declare function dataYandexMdbGreenplumClusterMasterSubclusterToTerraform(struct?: DataYandexMdbGreenplumClusterMasterSubcluster): any;
export declare class DataYandexMdbGreenplumClusterMasterSubclusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbGreenplumClusterMasterSubcluster | undefined;
    set internalValue(value: DataYandexMdbGreenplumClusterMasterSubcluster | undefined);
    private _resources;
    get resources(): DataYandexMdbGreenplumClusterMasterSubclusterResourcesList;
}
export declare class DataYandexMdbGreenplumClusterMasterSubclusterList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbGreenplumClusterMasterSubclusterOutputReference;
}
export interface DataYandexMdbGreenplumClusterSegmentHosts {
}
export declare function dataYandexMdbGreenplumClusterSegmentHostsToTerraform(struct?: DataYandexMdbGreenplumClusterSegmentHosts): any;
export declare class DataYandexMdbGreenplumClusterSegmentHostsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbGreenplumClusterSegmentHosts | undefined;
    set internalValue(value: DataYandexMdbGreenplumClusterSegmentHosts | undefined);
    get fqdn(): string;
}
export declare class DataYandexMdbGreenplumClusterSegmentHostsList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbGreenplumClusterSegmentHostsOutputReference;
}
export interface DataYandexMdbGreenplumClusterSegmentSubclusterResources {
}
export declare function dataYandexMdbGreenplumClusterSegmentSubclusterResourcesToTerraform(struct?: DataYandexMdbGreenplumClusterSegmentSubclusterResources): any;
export declare class DataYandexMdbGreenplumClusterSegmentSubclusterResourcesOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbGreenplumClusterSegmentSubclusterResources | undefined;
    set internalValue(value: DataYandexMdbGreenplumClusterSegmentSubclusterResources | undefined);
    get diskSize(): number;
    get diskTypeId(): string;
    get resourcePresetId(): string;
}
export declare class DataYandexMdbGreenplumClusterSegmentSubclusterResourcesList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbGreenplumClusterSegmentSubclusterResourcesOutputReference;
}
export interface DataYandexMdbGreenplumClusterSegmentSubcluster {
}
export declare function dataYandexMdbGreenplumClusterSegmentSubclusterToTerraform(struct?: DataYandexMdbGreenplumClusterSegmentSubcluster): any;
export declare class DataYandexMdbGreenplumClusterSegmentSubclusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbGreenplumClusterSegmentSubcluster | undefined;
    set internalValue(value: DataYandexMdbGreenplumClusterSegmentSubcluster | undefined);
    private _resources;
    get resources(): DataYandexMdbGreenplumClusterSegmentSubclusterResourcesList;
}
export declare class DataYandexMdbGreenplumClusterSegmentSubclusterList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbGreenplumClusterSegmentSubclusterOutputReference;
}
export interface DataYandexMdbGreenplumClusterPoolerConfig {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_greenplum_cluster#pool_client_idle_timeout DataYandexMdbGreenplumCluster#pool_client_idle_timeout}
    */
    readonly poolClientIdleTimeout?: number;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_greenplum_cluster#pool_size DataYandexMdbGreenplumCluster#pool_size}
    */
    readonly poolSize?: number;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_greenplum_cluster#pooling_mode DataYandexMdbGreenplumCluster#pooling_mode}
    */
    readonly poolingMode?: string;
}
export declare function dataYandexMdbGreenplumClusterPoolerConfigToTerraform(struct?: DataYandexMdbGreenplumClusterPoolerConfigOutputReference | DataYandexMdbGreenplumClusterPoolerConfig): any;
export declare class DataYandexMdbGreenplumClusterPoolerConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataYandexMdbGreenplumClusterPoolerConfig | undefined;
    set internalValue(value: DataYandexMdbGreenplumClusterPoolerConfig | undefined);
    private _poolClientIdleTimeout?;
    get poolClientIdleTimeout(): number;
    set poolClientIdleTimeout(value: number);
    resetPoolClientIdleTimeout(): void;
    get poolClientIdleTimeoutInput(): number | undefined;
    private _poolSize?;
    get poolSize(): number;
    set poolSize(value: number);
    resetPoolSize(): void;
    get poolSizeInput(): number | undefined;
    private _poolingMode?;
    get poolingMode(): string;
    set poolingMode(value: string);
    resetPoolingMode(): void;
    get poolingModeInput(): string | undefined;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/yandex/d/mdb_greenplum_cluster yandex_mdb_greenplum_cluster}
*/
export declare class DataYandexMdbGreenplumCluster extends cdktf.TerraformDataSource {
    static readonly tfResourceType = "yandex_mdb_greenplum_cluster";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/yandex/d/mdb_greenplum_cluster yandex_mdb_greenplum_cluster} Data Source
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataYandexMdbGreenplumClusterConfig = {}
    */
    constructor(scope: Construct, id: string, config?: DataYandexMdbGreenplumClusterConfig);
    private _access;
    get access(): DataYandexMdbGreenplumClusterAccessList;
    get assignPublicIp(): cdktf.IResolvable;
    private _backupWindowStart;
    get backupWindowStart(): DataYandexMdbGreenplumClusterBackupWindowStartList;
    private _clusterId?;
    get clusterId(): string;
    set clusterId(value: string);
    resetClusterId(): void;
    get clusterIdInput(): string | undefined;
    get createdAt(): string;
    get deletionProtection(): cdktf.IResolvable;
    get description(): string;
    get environment(): string;
    private _folderId?;
    get folderId(): string;
    set folderId(value: string);
    resetFolderId(): void;
    get folderIdInput(): string | undefined;
    private _greenplumConfig?;
    get greenplumConfig(): {
        [key: string]: string;
    };
    set greenplumConfig(value: {
        [key: string]: string;
    });
    resetGreenplumConfig(): void;
    get greenplumConfigInput(): {
        [key: string]: string;
    } | undefined;
    get health(): string;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _labels;
    get labels(): cdktf.StringMap;
    get masterHostCount(): number;
    private _masterHosts;
    get masterHosts(): DataYandexMdbGreenplumClusterMasterHostsList;
    private _masterSubcluster;
    get masterSubcluster(): DataYandexMdbGreenplumClusterMasterSubclusterList;
    private _name?;
    get name(): string;
    set name(value: string);
    resetName(): void;
    get nameInput(): string | undefined;
    get networkId(): string;
    get securityGroupIds(): string[];
    get segmentHostCount(): number;
    private _segmentHosts;
    get segmentHosts(): DataYandexMdbGreenplumClusterSegmentHostsList;
    get segmentInHost(): number;
    private _segmentSubcluster;
    get segmentSubcluster(): DataYandexMdbGreenplumClusterSegmentSubclusterList;
    get status(): string;
    get subnetId(): string;
    get userName(): string;
    get version(): string;
    get zone(): string;
    private _poolerConfig;
    get poolerConfig(): DataYandexMdbGreenplumClusterPoolerConfigOutputReference;
    putPoolerConfig(value: DataYandexMdbGreenplumClusterPoolerConfig): void;
    resetPoolerConfig(): void;
    get poolerConfigInput(): DataYandexMdbGreenplumClusterPoolerConfig | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
