import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface DataYandexCdnResourceConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#active DataYandexCdnResource#active}
    */
    readonly active?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#cname DataYandexCdnResource#cname}
    */
    readonly cname?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#folder_id DataYandexCdnResource#folder_id}
    */
    readonly folderId?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#id DataYandexCdnResource#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#origin_group_id DataYandexCdnResource#origin_group_id}
    */
    readonly originGroupId?: number;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#origin_group_name DataYandexCdnResource#origin_group_name}
    */
    readonly originGroupName?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#origin_protocol DataYandexCdnResource#origin_protocol}
    */
    readonly originProtocol?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#resource_id DataYandexCdnResource#resource_id}
    */
    readonly resourceId?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#secondary_hostnames DataYandexCdnResource#secondary_hostnames}
    */
    readonly secondaryHostnames?: string[];
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#updated_at DataYandexCdnResource#updated_at}
    */
    readonly updatedAt?: string;
    /**
    * options block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#options DataYandexCdnResource#options}
    */
    readonly options?: DataYandexCdnResourceOptions;
    /**
    * ssl_certificate block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#ssl_certificate DataYandexCdnResource#ssl_certificate}
    */
    readonly sslCertificate?: DataYandexCdnResourceSslCertificate;
}
export interface DataYandexCdnResourceOptions {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#allowed_http_methods DataYandexCdnResource#allowed_http_methods}
    */
    readonly allowedHttpMethods?: string[];
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#browser_cache_settings DataYandexCdnResource#browser_cache_settings}
    */
    readonly browserCacheSettings?: number;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#cache_http_headers DataYandexCdnResource#cache_http_headers}
    */
    readonly cacheHttpHeaders?: string[];
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#cors DataYandexCdnResource#cors}
    */
    readonly cors?: string[];
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#custom_host_header DataYandexCdnResource#custom_host_header}
    */
    readonly customHostHeader?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#custom_server_name DataYandexCdnResource#custom_server_name}
    */
    readonly customServerName?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#disable_cache DataYandexCdnResource#disable_cache}
    */
    readonly disableCache?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#disable_proxy_force_ranges DataYandexCdnResource#disable_proxy_force_ranges}
    */
    readonly disableProxyForceRanges?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#edge_cache_settings DataYandexCdnResource#edge_cache_settings}
    */
    readonly edgeCacheSettings?: number;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#fetched_compressed DataYandexCdnResource#fetched_compressed}
    */
    readonly fetchedCompressed?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#forward_host_header DataYandexCdnResource#forward_host_header}
    */
    readonly forwardHostHeader?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#gzip_on DataYandexCdnResource#gzip_on}
    */
    readonly gzipOn?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#ignore_cookie DataYandexCdnResource#ignore_cookie}
    */
    readonly ignoreCookie?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#ignore_query_params DataYandexCdnResource#ignore_query_params}
    */
    readonly ignoreQueryParams?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#proxy_cache_methods_set DataYandexCdnResource#proxy_cache_methods_set}
    */
    readonly proxyCacheMethodsSet?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#query_params_blacklist DataYandexCdnResource#query_params_blacklist}
    */
    readonly queryParamsBlacklist?: string[];
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#query_params_whitelist DataYandexCdnResource#query_params_whitelist}
    */
    readonly queryParamsWhitelist?: string[];
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#redirect_http_to_https DataYandexCdnResource#redirect_http_to_https}
    */
    readonly redirectHttpToHttps?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#redirect_https_to_http DataYandexCdnResource#redirect_https_to_http}
    */
    readonly redirectHttpsToHttp?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#slice DataYandexCdnResource#slice}
    */
    readonly slice?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#static_request_headers DataYandexCdnResource#static_request_headers}
    */
    readonly staticRequestHeaders?: string[];
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#static_response_headers DataYandexCdnResource#static_response_headers}
    */
    readonly staticResponseHeaders?: {
        [key: string]: string;
    };
}
export declare function dataYandexCdnResourceOptionsToTerraform(struct?: DataYandexCdnResourceOptionsOutputReference | DataYandexCdnResourceOptions): any;
export declare class DataYandexCdnResourceOptionsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataYandexCdnResourceOptions | undefined;
    set internalValue(value: DataYandexCdnResourceOptions | undefined);
    private _allowedHttpMethods?;
    get allowedHttpMethods(): string[];
    set allowedHttpMethods(value: string[]);
    resetAllowedHttpMethods(): void;
    get allowedHttpMethodsInput(): string[] | undefined;
    private _browserCacheSettings?;
    get browserCacheSettings(): number;
    set browserCacheSettings(value: number);
    resetBrowserCacheSettings(): void;
    get browserCacheSettingsInput(): number | undefined;
    private _cacheHttpHeaders?;
    get cacheHttpHeaders(): string[];
    set cacheHttpHeaders(value: string[]);
    resetCacheHttpHeaders(): void;
    get cacheHttpHeadersInput(): string[] | undefined;
    private _cors?;
    get cors(): string[];
    set cors(value: string[]);
    resetCors(): void;
    get corsInput(): string[] | undefined;
    private _customHostHeader?;
    get customHostHeader(): string;
    set customHostHeader(value: string);
    resetCustomHostHeader(): void;
    get customHostHeaderInput(): string | undefined;
    private _customServerName?;
    get customServerName(): string;
    set customServerName(value: string);
    resetCustomServerName(): void;
    get customServerNameInput(): string | undefined;
    private _disableCache?;
    get disableCache(): boolean | cdktf.IResolvable;
    set disableCache(value: boolean | cdktf.IResolvable);
    resetDisableCache(): void;
    get disableCacheInput(): boolean | cdktf.IResolvable | undefined;
    private _disableProxyForceRanges?;
    get disableProxyForceRanges(): boolean | cdktf.IResolvable;
    set disableProxyForceRanges(value: boolean | cdktf.IResolvable);
    resetDisableProxyForceRanges(): void;
    get disableProxyForceRangesInput(): boolean | cdktf.IResolvable | undefined;
    private _edgeCacheSettings?;
    get edgeCacheSettings(): number;
    set edgeCacheSettings(value: number);
    resetEdgeCacheSettings(): void;
    get edgeCacheSettingsInput(): number | undefined;
    private _fetchedCompressed?;
    get fetchedCompressed(): boolean | cdktf.IResolvable;
    set fetchedCompressed(value: boolean | cdktf.IResolvable);
    resetFetchedCompressed(): void;
    get fetchedCompressedInput(): boolean | cdktf.IResolvable | undefined;
    private _forwardHostHeader?;
    get forwardHostHeader(): boolean | cdktf.IResolvable;
    set forwardHostHeader(value: boolean | cdktf.IResolvable);
    resetForwardHostHeader(): void;
    get forwardHostHeaderInput(): boolean | cdktf.IResolvable | undefined;
    private _gzipOn?;
    get gzipOn(): boolean | cdktf.IResolvable;
    set gzipOn(value: boolean | cdktf.IResolvable);
    resetGzipOn(): void;
    get gzipOnInput(): boolean | cdktf.IResolvable | undefined;
    private _ignoreCookie?;
    get ignoreCookie(): boolean | cdktf.IResolvable;
    set ignoreCookie(value: boolean | cdktf.IResolvable);
    resetIgnoreCookie(): void;
    get ignoreCookieInput(): boolean | cdktf.IResolvable | undefined;
    private _ignoreQueryParams?;
    get ignoreQueryParams(): boolean | cdktf.IResolvable;
    set ignoreQueryParams(value: boolean | cdktf.IResolvable);
    resetIgnoreQueryParams(): void;
    get ignoreQueryParamsInput(): boolean | cdktf.IResolvable | undefined;
    private _proxyCacheMethodsSet?;
    get proxyCacheMethodsSet(): boolean | cdktf.IResolvable;
    set proxyCacheMethodsSet(value: boolean | cdktf.IResolvable);
    resetProxyCacheMethodsSet(): void;
    get proxyCacheMethodsSetInput(): boolean | cdktf.IResolvable | undefined;
    private _queryParamsBlacklist?;
    get queryParamsBlacklist(): string[];
    set queryParamsBlacklist(value: string[]);
    resetQueryParamsBlacklist(): void;
    get queryParamsBlacklistInput(): string[] | undefined;
    private _queryParamsWhitelist?;
    get queryParamsWhitelist(): string[];
    set queryParamsWhitelist(value: string[]);
    resetQueryParamsWhitelist(): void;
    get queryParamsWhitelistInput(): string[] | undefined;
    private _redirectHttpToHttps?;
    get redirectHttpToHttps(): boolean | cdktf.IResolvable;
    set redirectHttpToHttps(value: boolean | cdktf.IResolvable);
    resetRedirectHttpToHttps(): void;
    get redirectHttpToHttpsInput(): boolean | cdktf.IResolvable | undefined;
    private _redirectHttpsToHttp?;
    get redirectHttpsToHttp(): boolean | cdktf.IResolvable;
    set redirectHttpsToHttp(value: boolean | cdktf.IResolvable);
    resetRedirectHttpsToHttp(): void;
    get redirectHttpsToHttpInput(): boolean | cdktf.IResolvable | undefined;
    private _slice?;
    get slice(): boolean | cdktf.IResolvable;
    set slice(value: boolean | cdktf.IResolvable);
    resetSlice(): void;
    get sliceInput(): boolean | cdktf.IResolvable | undefined;
    private _staticRequestHeaders?;
    get staticRequestHeaders(): string[];
    set staticRequestHeaders(value: string[]);
    resetStaticRequestHeaders(): void;
    get staticRequestHeadersInput(): string[] | undefined;
    private _staticResponseHeaders?;
    get staticResponseHeaders(): {
        [key: string]: string;
    };
    set staticResponseHeaders(value: {
        [key: string]: string;
    });
    resetStaticResponseHeaders(): void;
    get staticResponseHeadersInput(): {
        [key: string]: string;
    } | undefined;
}
export interface DataYandexCdnResourceSslCertificate {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#certificate_manager_id DataYandexCdnResource#certificate_manager_id}
    */
    readonly certificateManagerId?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource#type DataYandexCdnResource#type}
    */
    readonly type: string;
}
export declare function dataYandexCdnResourceSslCertificateToTerraform(struct?: DataYandexCdnResourceSslCertificateOutputReference | DataYandexCdnResourceSslCertificate): any;
export declare class DataYandexCdnResourceSslCertificateOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataYandexCdnResourceSslCertificate | undefined;
    set internalValue(value: DataYandexCdnResourceSslCertificate | undefined);
    private _certificateManagerId?;
    get certificateManagerId(): string;
    set certificateManagerId(value: string);
    resetCertificateManagerId(): void;
    get certificateManagerIdInput(): string | undefined;
    get status(): string;
    private _type?;
    get type(): string;
    set type(value: string);
    get typeInput(): string | undefined;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource yandex_cdn_resource}
*/
export declare class DataYandexCdnResource extends cdktf.TerraformDataSource {
    static readonly tfResourceType = "yandex_cdn_resource";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/yandex/d/cdn_resource yandex_cdn_resource} Data Source
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataYandexCdnResourceConfig = {}
    */
    constructor(scope: Construct, id: string, config?: DataYandexCdnResourceConfig);
    private _active?;
    get active(): boolean | cdktf.IResolvable;
    set active(value: boolean | cdktf.IResolvable);
    resetActive(): void;
    get activeInput(): boolean | cdktf.IResolvable | undefined;
    private _cname?;
    get cname(): string;
    set cname(value: string);
    resetCname(): void;
    get cnameInput(): string | undefined;
    get createdAt(): string;
    private _folderId?;
    get folderId(): string;
    set folderId(value: string);
    resetFolderId(): void;
    get folderIdInput(): string | undefined;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _originGroupId?;
    get originGroupId(): number;
    set originGroupId(value: number);
    resetOriginGroupId(): void;
    get originGroupIdInput(): number | undefined;
    private _originGroupName?;
    get originGroupName(): string;
    set originGroupName(value: string);
    resetOriginGroupName(): void;
    get originGroupNameInput(): string | undefined;
    private _originProtocol?;
    get originProtocol(): string;
    set originProtocol(value: string);
    resetOriginProtocol(): void;
    get originProtocolInput(): string | undefined;
    private _resourceId?;
    get resourceId(): string;
    set resourceId(value: string);
    resetResourceId(): void;
    get resourceIdInput(): string | undefined;
    private _secondaryHostnames?;
    get secondaryHostnames(): string[];
    set secondaryHostnames(value: string[]);
    resetSecondaryHostnames(): void;
    get secondaryHostnamesInput(): string[] | undefined;
    private _updatedAt?;
    get updatedAt(): string;
    set updatedAt(value: string);
    resetUpdatedAt(): void;
    get updatedAtInput(): string | undefined;
    private _options;
    get options(): DataYandexCdnResourceOptionsOutputReference;
    putOptions(value: DataYandexCdnResourceOptions): void;
    resetOptions(): void;
    get optionsInput(): DataYandexCdnResourceOptions | undefined;
    private _sslCertificate;
    get sslCertificate(): DataYandexCdnResourceSslCertificateOutputReference;
    putSslCertificate(value: DataYandexCdnResourceSslCertificate): void;
    resetSslCertificate(): void;
    get sslCertificateInput(): DataYandexCdnResourceSslCertificate | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
