import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface DataYandexMdbPostgresqlUserConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_postgresql_user#cluster_id DataYandexMdbPostgresqlUser#cluster_id}
    */
    readonly clusterId: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_postgresql_user#conn_limit DataYandexMdbPostgresqlUser#conn_limit}
    */
    readonly connLimit?: number;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_postgresql_user#id DataYandexMdbPostgresqlUser#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_postgresql_user#login DataYandexMdbPostgresqlUser#login}
    */
    readonly login?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_postgresql_user#name DataYandexMdbPostgresqlUser#name}
    */
    readonly name: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_postgresql_user#settings DataYandexMdbPostgresqlUser#settings}
    */
    readonly settings?: {
        [key: string]: string;
    };
}
export interface DataYandexMdbPostgresqlUserPermission {
}
export declare function dataYandexMdbPostgresqlUserPermissionToTerraform(struct?: DataYandexMdbPostgresqlUserPermission): any;
export declare class DataYandexMdbPostgresqlUserPermissionOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbPostgresqlUserPermission | undefined;
    set internalValue(value: DataYandexMdbPostgresqlUserPermission | undefined);
    get databaseName(): string;
}
export declare class DataYandexMdbPostgresqlUserPermissionList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbPostgresqlUserPermissionOutputReference;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/yandex/d/mdb_postgresql_user yandex_mdb_postgresql_user}
*/
export declare class DataYandexMdbPostgresqlUser extends cdktf.TerraformDataSource {
    static readonly tfResourceType = "yandex_mdb_postgresql_user";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/yandex/d/mdb_postgresql_user yandex_mdb_postgresql_user} Data Source
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataYandexMdbPostgresqlUserConfig
    */
    constructor(scope: Construct, id: string, config: DataYandexMdbPostgresqlUserConfig);
    private _clusterId?;
    get clusterId(): string;
    set clusterId(value: string);
    get clusterIdInput(): string | undefined;
    private _connLimit?;
    get connLimit(): number;
    set connLimit(value: number);
    resetConnLimit(): void;
    get connLimitInput(): number | undefined;
    get grants(): string[];
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _login?;
    get login(): boolean | cdktf.IResolvable;
    set login(value: boolean | cdktf.IResolvable);
    resetLogin(): void;
    get loginInput(): boolean | cdktf.IResolvable | undefined;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    get password(): string;
    private _permission;
    get permission(): DataYandexMdbPostgresqlUserPermissionList;
    private _settings?;
    get settings(): {
        [key: string]: string;
    };
    set settings(value: {
        [key: string]: string;
    });
    resetSettings(): void;
    get settingsInput(): {
        [key: string]: string;
    } | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
