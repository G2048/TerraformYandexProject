import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface MdbKafkaConnectorConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#cluster_id MdbKafkaConnector#cluster_id}
    */
    readonly clusterId: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#id MdbKafkaConnector#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#name MdbKafkaConnector#name}
    */
    readonly name: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#properties MdbKafkaConnector#properties}
    */
    readonly properties?: {
        [key: string]: string;
    };
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#tasks_max MdbKafkaConnector#tasks_max}
    */
    readonly tasksMax?: number;
    /**
    * connector_config_mirrormaker block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#connector_config_mirrormaker MdbKafkaConnector#connector_config_mirrormaker}
    */
    readonly connectorConfigMirrormaker?: MdbKafkaConnectorConnectorConfigMirrormaker[] | cdktf.IResolvable;
}
export interface MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#bootstrap_servers MdbKafkaConnector#bootstrap_servers}
    */
    readonly bootstrapServers: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#sasl_mechanism MdbKafkaConnector#sasl_mechanism}
    */
    readonly saslMechanism?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#sasl_password MdbKafkaConnector#sasl_password}
    */
    readonly saslPassword?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#sasl_username MdbKafkaConnector#sasl_username}
    */
    readonly saslUsername?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#security_protocol MdbKafkaConnector#security_protocol}
    */
    readonly securityProtocol?: string;
}
export declare function mdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalClusterToTerraform(struct?: MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster | cdktf.IResolvable): any;
export declare class MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster | cdktf.IResolvable | undefined;
    set internalValue(value: MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster | cdktf.IResolvable | undefined);
    private _bootstrapServers?;
    get bootstrapServers(): string;
    set bootstrapServers(value: string);
    get bootstrapServersInput(): string | undefined;
    private _saslMechanism?;
    get saslMechanism(): string;
    set saslMechanism(value: string);
    resetSaslMechanism(): void;
    get saslMechanismInput(): string | undefined;
    private _saslPassword?;
    get saslPassword(): string;
    set saslPassword(value: string);
    resetSaslPassword(): void;
    get saslPasswordInput(): string | undefined;
    private _saslUsername?;
    get saslUsername(): string;
    set saslUsername(value: string);
    resetSaslUsername(): void;
    get saslUsernameInput(): string | undefined;
    private _securityProtocol?;
    get securityProtocol(): string;
    set securityProtocol(value: string);
    resetSecurityProtocol(): void;
    get securityProtocolInput(): string | undefined;
}
export declare class MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalClusterList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    internalValue?: MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster[] | cdktf.IResolvable;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalClusterOutputReference;
}
export interface MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster {
}
export declare function mdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisClusterToTerraform(struct?: MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster | cdktf.IResolvable): any;
export declare class MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster | cdktf.IResolvable | undefined;
    set internalValue(value: MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster | cdktf.IResolvable | undefined);
}
export declare class MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisClusterList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    internalValue?: MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster[] | cdktf.IResolvable;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisClusterOutputReference;
}
export interface MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#alias MdbKafkaConnector#alias}
    */
    readonly alias?: string;
    /**
    * external_cluster block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#external_cluster MdbKafkaConnector#external_cluster}
    */
    readonly externalCluster?: MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster[] | cdktf.IResolvable;
    /**
    * this_cluster block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#this_cluster MdbKafkaConnector#this_cluster}
    */
    readonly thisCluster?: MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster[] | cdktf.IResolvable;
}
export declare function mdbKafkaConnectorConnectorConfigMirrormakerSourceClusterToTerraform(struct?: MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterOutputReference | MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster): any;
export declare class MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster | undefined;
    set internalValue(value: MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster | undefined);
    private _alias?;
    get alias(): string;
    set alias(value: string);
    resetAlias(): void;
    get aliasInput(): string | undefined;
    private _externalCluster;
    get externalCluster(): MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalClusterList;
    putExternalCluster(value: MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster[] | cdktf.IResolvable): void;
    resetExternalCluster(): void;
    get externalClusterInput(): cdktf.IResolvable | MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster[] | undefined;
    private _thisCluster;
    get thisCluster(): MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisClusterList;
    putThisCluster(value: MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster[] | cdktf.IResolvable): void;
    resetThisCluster(): void;
    get thisClusterInput(): cdktf.IResolvable | MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster[] | undefined;
}
export interface MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#bootstrap_servers MdbKafkaConnector#bootstrap_servers}
    */
    readonly bootstrapServers: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#sasl_mechanism MdbKafkaConnector#sasl_mechanism}
    */
    readonly saslMechanism?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#sasl_password MdbKafkaConnector#sasl_password}
    */
    readonly saslPassword?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#sasl_username MdbKafkaConnector#sasl_username}
    */
    readonly saslUsername?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#security_protocol MdbKafkaConnector#security_protocol}
    */
    readonly securityProtocol?: string;
}
export declare function mdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalClusterToTerraform(struct?: MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster | cdktf.IResolvable): any;
export declare class MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster | cdktf.IResolvable | undefined;
    set internalValue(value: MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster | cdktf.IResolvable | undefined);
    private _bootstrapServers?;
    get bootstrapServers(): string;
    set bootstrapServers(value: string);
    get bootstrapServersInput(): string | undefined;
    private _saslMechanism?;
    get saslMechanism(): string;
    set saslMechanism(value: string);
    resetSaslMechanism(): void;
    get saslMechanismInput(): string | undefined;
    private _saslPassword?;
    get saslPassword(): string;
    set saslPassword(value: string);
    resetSaslPassword(): void;
    get saslPasswordInput(): string | undefined;
    private _saslUsername?;
    get saslUsername(): string;
    set saslUsername(value: string);
    resetSaslUsername(): void;
    get saslUsernameInput(): string | undefined;
    private _securityProtocol?;
    get securityProtocol(): string;
    set securityProtocol(value: string);
    resetSecurityProtocol(): void;
    get securityProtocolInput(): string | undefined;
}
export declare class MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalClusterList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    internalValue?: MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster[] | cdktf.IResolvable;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalClusterOutputReference;
}
export interface MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster {
}
export declare function mdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisClusterToTerraform(struct?: MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster | cdktf.IResolvable): any;
export declare class MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster | cdktf.IResolvable | undefined;
    set internalValue(value: MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster | cdktf.IResolvable | undefined);
}
export declare class MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisClusterList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    internalValue?: MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster[] | cdktf.IResolvable;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisClusterOutputReference;
}
export interface MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#alias MdbKafkaConnector#alias}
    */
    readonly alias?: string;
    /**
    * external_cluster block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#external_cluster MdbKafkaConnector#external_cluster}
    */
    readonly externalCluster?: MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster[] | cdktf.IResolvable;
    /**
    * this_cluster block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#this_cluster MdbKafkaConnector#this_cluster}
    */
    readonly thisCluster?: MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster[] | cdktf.IResolvable;
}
export declare function mdbKafkaConnectorConnectorConfigMirrormakerTargetClusterToTerraform(struct?: MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterOutputReference | MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster): any;
export declare class MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster | undefined;
    set internalValue(value: MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster | undefined);
    private _alias?;
    get alias(): string;
    set alias(value: string);
    resetAlias(): void;
    get aliasInput(): string | undefined;
    private _externalCluster;
    get externalCluster(): MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalClusterList;
    putExternalCluster(value: MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster[] | cdktf.IResolvable): void;
    resetExternalCluster(): void;
    get externalClusterInput(): cdktf.IResolvable | MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster[] | undefined;
    private _thisCluster;
    get thisCluster(): MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisClusterList;
    putThisCluster(value: MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster[] | cdktf.IResolvable): void;
    resetThisCluster(): void;
    get thisClusterInput(): cdktf.IResolvable | MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster[] | undefined;
}
export interface MdbKafkaConnectorConnectorConfigMirrormaker {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#replication_factor MdbKafkaConnector#replication_factor}
    */
    readonly replicationFactor: number;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#topics MdbKafkaConnector#topics}
    */
    readonly topics: string;
    /**
    * source_cluster block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#source_cluster MdbKafkaConnector#source_cluster}
    */
    readonly sourceCluster: MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster;
    /**
    * target_cluster block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector#target_cluster MdbKafkaConnector#target_cluster}
    */
    readonly targetCluster: MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster;
}
export declare function mdbKafkaConnectorConnectorConfigMirrormakerToTerraform(struct?: MdbKafkaConnectorConnectorConfigMirrormaker | cdktf.IResolvable): any;
export declare class MdbKafkaConnectorConnectorConfigMirrormakerOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): MdbKafkaConnectorConnectorConfigMirrormaker | cdktf.IResolvable | undefined;
    set internalValue(value: MdbKafkaConnectorConnectorConfigMirrormaker | cdktf.IResolvable | undefined);
    private _replicationFactor?;
    get replicationFactor(): number;
    set replicationFactor(value: number);
    get replicationFactorInput(): number | undefined;
    private _topics?;
    get topics(): string;
    set topics(value: string);
    get topicsInput(): string | undefined;
    private _sourceCluster;
    get sourceCluster(): MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterOutputReference;
    putSourceCluster(value: MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster): void;
    get sourceClusterInput(): MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster | undefined;
    private _targetCluster;
    get targetCluster(): MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterOutputReference;
    putTargetCluster(value: MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster): void;
    get targetClusterInput(): MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster | undefined;
}
export declare class MdbKafkaConnectorConnectorConfigMirrormakerList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    internalValue?: MdbKafkaConnectorConnectorConfigMirrormaker[] | cdktf.IResolvable;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): MdbKafkaConnectorConnectorConfigMirrormakerOutputReference;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector yandex_mdb_kafka_connector}
*/
export declare class MdbKafkaConnector extends cdktf.TerraformResource {
    static readonly tfResourceType = "yandex_mdb_kafka_connector";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/yandex/r/mdb_kafka_connector yandex_mdb_kafka_connector} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options MdbKafkaConnectorConfig
    */
    constructor(scope: Construct, id: string, config: MdbKafkaConnectorConfig);
    private _clusterId?;
    get clusterId(): string;
    set clusterId(value: string);
    get clusterIdInput(): string | undefined;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    private _properties?;
    get properties(): {
        [key: string]: string;
    };
    set properties(value: {
        [key: string]: string;
    });
    resetProperties(): void;
    get propertiesInput(): {
        [key: string]: string;
    } | undefined;
    private _tasksMax?;
    get tasksMax(): number;
    set tasksMax(value: number);
    resetTasksMax(): void;
    get tasksMaxInput(): number | undefined;
    private _connectorConfigMirrormaker;
    get connectorConfigMirrormaker(): MdbKafkaConnectorConnectorConfigMirrormakerList;
    putConnectorConfigMirrormaker(value: MdbKafkaConnectorConnectorConfigMirrormaker[] | cdktf.IResolvable): void;
    resetConnectorConfigMirrormaker(): void;
    get connectorConfigMirrormakerInput(): cdktf.IResolvable | MdbKafkaConnectorConnectorConfigMirrormaker[] | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
