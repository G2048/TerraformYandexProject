import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface DataYandexMdbMysqlUserConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_mysql_user#cluster_id DataYandexMdbMysqlUser#cluster_id}
    */
    readonly clusterId: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_mysql_user#id DataYandexMdbMysqlUser#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_mysql_user#name DataYandexMdbMysqlUser#name}
    */
    readonly name: string;
    /**
    * permission block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_mysql_user#permission DataYandexMdbMysqlUser#permission}
    */
    readonly permission?: DataYandexMdbMysqlUserPermission[] | cdktf.IResolvable;
}
export interface DataYandexMdbMysqlUserConnectionLimits {
}
export declare function dataYandexMdbMysqlUserConnectionLimitsToTerraform(struct?: DataYandexMdbMysqlUserConnectionLimits): any;
export declare class DataYandexMdbMysqlUserConnectionLimitsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbMysqlUserConnectionLimits | undefined;
    set internalValue(value: DataYandexMdbMysqlUserConnectionLimits | undefined);
    get maxConnectionsPerHour(): number;
    get maxQuestionsPerHour(): number;
    get maxUpdatesPerHour(): number;
    get maxUserConnections(): number;
}
export declare class DataYandexMdbMysqlUserConnectionLimitsList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbMysqlUserConnectionLimitsOutputReference;
}
export interface DataYandexMdbMysqlUserPermission {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_mysql_user#roles DataYandexMdbMysqlUser#roles}
    */
    readonly roles?: string[];
}
export declare function dataYandexMdbMysqlUserPermissionToTerraform(struct?: DataYandexMdbMysqlUserPermission | cdktf.IResolvable): any;
export declare class DataYandexMdbMysqlUserPermissionOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbMysqlUserPermission | cdktf.IResolvable | undefined;
    set internalValue(value: DataYandexMdbMysqlUserPermission | cdktf.IResolvable | undefined);
    get databaseName(): string;
    private _roles?;
    get roles(): string[];
    set roles(value: string[]);
    resetRoles(): void;
    get rolesInput(): string[] | undefined;
}
export declare class DataYandexMdbMysqlUserPermissionList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    internalValue?: DataYandexMdbMysqlUserPermission[] | cdktf.IResolvable;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbMysqlUserPermissionOutputReference;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/yandex/d/mdb_mysql_user yandex_mdb_mysql_user}
*/
export declare class DataYandexMdbMysqlUser extends cdktf.TerraformDataSource {
    static readonly tfResourceType = "yandex_mdb_mysql_user";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/yandex/d/mdb_mysql_user yandex_mdb_mysql_user} Data Source
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataYandexMdbMysqlUserConfig
    */
    constructor(scope: Construct, id: string, config: DataYandexMdbMysqlUserConfig);
    get authenticationPlugin(): string;
    private _clusterId?;
    get clusterId(): string;
    set clusterId(value: string);
    get clusterIdInput(): string | undefined;
    private _connectionLimits;
    get connectionLimits(): DataYandexMdbMysqlUserConnectionLimitsList;
    get globalPermissions(): string[];
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    private _permission;
    get permission(): DataYandexMdbMysqlUserPermissionList;
    putPermission(value: DataYandexMdbMysqlUserPermission[] | cdktf.IResolvable): void;
    resetPermission(): void;
    get permissionInput(): cdktf.IResolvable | DataYandexMdbMysqlUserPermission[] | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
