import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface DataYandexMdbClickhouseClusterConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_clickhouse_cluster#cluster_id DataYandexMdbClickhouseCluster#cluster_id}
    */
    readonly clusterId?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_clickhouse_cluster#deletion_protection DataYandexMdbClickhouseCluster#deletion_protection}
    */
    readonly deletionProtection?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_clickhouse_cluster#folder_id DataYandexMdbClickhouseCluster#folder_id}
    */
    readonly folderId?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_clickhouse_cluster#id DataYandexMdbClickhouseCluster#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_clickhouse_cluster#name DataYandexMdbClickhouseCluster#name}
    */
    readonly name?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_clickhouse_cluster#service_account_id DataYandexMdbClickhouseCluster#service_account_id}
    */
    readonly serviceAccountId?: string;
    /**
    * cloud_storage block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_clickhouse_cluster#cloud_storage DataYandexMdbClickhouseCluster#cloud_storage}
    */
    readonly cloudStorage?: DataYandexMdbClickhouseClusterCloudStorage;
}
export interface DataYandexMdbClickhouseClusterAccess {
}
export declare function dataYandexMdbClickhouseClusterAccessToTerraform(struct?: DataYandexMdbClickhouseClusterAccess): any;
export declare class DataYandexMdbClickhouseClusterAccessOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterAccess | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterAccess | undefined);
    get dataLens(): cdktf.IResolvable;
    get metrika(): cdktf.IResolvable;
    get serverless(): cdktf.IResolvable;
    get webSql(): cdktf.IResolvable;
}
export declare class DataYandexMdbClickhouseClusterAccessList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterAccessOutputReference;
}
export interface DataYandexMdbClickhouseClusterBackupWindowStart {
}
export declare function dataYandexMdbClickhouseClusterBackupWindowStartToTerraform(struct?: DataYandexMdbClickhouseClusterBackupWindowStart): any;
export declare class DataYandexMdbClickhouseClusterBackupWindowStartOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterBackupWindowStart | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterBackupWindowStart | undefined);
    get hours(): number;
    get minutes(): number;
}
export declare class DataYandexMdbClickhouseClusterBackupWindowStartList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterBackupWindowStartOutputReference;
}
export interface DataYandexMdbClickhouseClusterClickhouseConfigCompression {
}
export declare function dataYandexMdbClickhouseClusterClickhouseConfigCompressionToTerraform(struct?: DataYandexMdbClickhouseClusterClickhouseConfigCompression): any;
export declare class DataYandexMdbClickhouseClusterClickhouseConfigCompressionOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterClickhouseConfigCompression | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterClickhouseConfigCompression | undefined);
    get method(): string;
    get minPartSize(): number;
    get minPartSizeRatio(): number;
}
export declare class DataYandexMdbClickhouseClusterClickhouseConfigCompressionList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterClickhouseConfigCompressionOutputReference;
}
export interface DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention {
}
export declare function dataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionToTerraform(struct?: DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention): any;
export declare class DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention | undefined);
    get age(): number;
    get precision(): number;
}
export declare class DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionOutputReference;
}
export interface DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern {
}
export declare function dataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternToTerraform(struct?: DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern): any;
export declare class DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern | undefined);
    get function(): string;
    get regexp(): string;
    private _retention;
    get retention(): DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionList;
}
export declare class DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternOutputReference;
}
export interface DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollup {
}
export declare function dataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupToTerraform(struct?: DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollup): any;
export declare class DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollup | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollup | undefined);
    get name(): string;
    private _pattern;
    get pattern(): DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternList;
}
export declare class DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupOutputReference;
}
export interface DataYandexMdbClickhouseClusterClickhouseConfigKafka {
}
export declare function dataYandexMdbClickhouseClusterClickhouseConfigKafkaToTerraform(struct?: DataYandexMdbClickhouseClusterClickhouseConfigKafka): any;
export declare class DataYandexMdbClickhouseClusterClickhouseConfigKafkaOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterClickhouseConfigKafka | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterClickhouseConfigKafka | undefined);
    get saslMechanism(): string;
    get saslPassword(): string;
    get saslUsername(): string;
    get securityProtocol(): string;
}
export declare class DataYandexMdbClickhouseClusterClickhouseConfigKafkaList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterClickhouseConfigKafkaOutputReference;
}
export interface DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicSettings {
}
export declare function dataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsToTerraform(struct?: DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicSettings): any;
export declare class DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicSettings | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicSettings | undefined);
    get saslMechanism(): string;
    get saslPassword(): string;
    get saslUsername(): string;
    get securityProtocol(): string;
}
export declare class DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsOutputReference;
}
export interface DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopic {
}
export declare function dataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicToTerraform(struct?: DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopic): any;
export declare class DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopic | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopic | undefined);
    get name(): string;
    private _settings;
    get settings(): DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsList;
}
export declare class DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicOutputReference;
}
export interface DataYandexMdbClickhouseClusterClickhouseConfigMergeTree {
}
export declare function dataYandexMdbClickhouseClusterClickhouseConfigMergeTreeToTerraform(struct?: DataYandexMdbClickhouseClusterClickhouseConfigMergeTree): any;
export declare class DataYandexMdbClickhouseClusterClickhouseConfigMergeTreeOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterClickhouseConfigMergeTree | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterClickhouseConfigMergeTree | undefined);
    get maxBytesToMergeAtMinSpaceInPool(): number;
    get maxReplicatedMergesInQueue(): number;
    get numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge(): number;
    get partsToDelayInsert(): number;
    get partsToThrowInsert(): number;
    get replicatedDeduplicationWindow(): number;
    get replicatedDeduplicationWindowSeconds(): number;
}
export declare class DataYandexMdbClickhouseClusterClickhouseConfigMergeTreeList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterClickhouseConfigMergeTreeOutputReference;
}
export interface DataYandexMdbClickhouseClusterClickhouseConfigRabbitmq {
}
export declare function dataYandexMdbClickhouseClusterClickhouseConfigRabbitmqToTerraform(struct?: DataYandexMdbClickhouseClusterClickhouseConfigRabbitmq): any;
export declare class DataYandexMdbClickhouseClusterClickhouseConfigRabbitmqOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterClickhouseConfigRabbitmq | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterClickhouseConfigRabbitmq | undefined);
    get password(): string;
    get username(): string;
}
export declare class DataYandexMdbClickhouseClusterClickhouseConfigRabbitmqList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterClickhouseConfigRabbitmqOutputReference;
}
export interface DataYandexMdbClickhouseClusterClickhouseConfig {
}
export declare function dataYandexMdbClickhouseClusterClickhouseConfigToTerraform(struct?: DataYandexMdbClickhouseClusterClickhouseConfig): any;
export declare class DataYandexMdbClickhouseClusterClickhouseConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterClickhouseConfig | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterClickhouseConfig | undefined);
    get backgroundPoolSize(): number;
    get backgroundSchedulePoolSize(): number;
    private _compression;
    get compression(): DataYandexMdbClickhouseClusterClickhouseConfigCompressionList;
    get geobaseUri(): string;
    private _graphiteRollup;
    get graphiteRollup(): DataYandexMdbClickhouseClusterClickhouseConfigGraphiteRollupList;
    private _kafka;
    get kafka(): DataYandexMdbClickhouseClusterClickhouseConfigKafkaList;
    private _kafkaTopic;
    get kafkaTopic(): DataYandexMdbClickhouseClusterClickhouseConfigKafkaTopicList;
    get keepAliveTimeout(): number;
    get logLevel(): string;
    get markCacheSize(): number;
    get maxConcurrentQueries(): number;
    get maxConnections(): number;
    get maxPartitionSizeToDrop(): number;
    get maxTableSizeToDrop(): number;
    private _mergeTree;
    get mergeTree(): DataYandexMdbClickhouseClusterClickhouseConfigMergeTreeList;
    get metricLogEnabled(): cdktf.IResolvable;
    get metricLogRetentionSize(): number;
    get metricLogRetentionTime(): number;
    get partLogRetentionSize(): number;
    get partLogRetentionTime(): number;
    get queryLogRetentionSize(): number;
    get queryLogRetentionTime(): number;
    get queryThreadLogEnabled(): cdktf.IResolvable;
    get queryThreadLogRetentionSize(): number;
    get queryThreadLogRetentionTime(): number;
    private _rabbitmq;
    get rabbitmq(): DataYandexMdbClickhouseClusterClickhouseConfigRabbitmqList;
    get textLogEnabled(): cdktf.IResolvable;
    get textLogLevel(): string;
    get textLogRetentionSize(): number;
    get textLogRetentionTime(): number;
    get timezone(): string;
    get traceLogEnabled(): cdktf.IResolvable;
    get traceLogRetentionSize(): number;
    get traceLogRetentionTime(): number;
    get uncompressedCacheSize(): number;
}
export declare class DataYandexMdbClickhouseClusterClickhouseConfigList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterClickhouseConfigOutputReference;
}
export interface DataYandexMdbClickhouseClusterClickhouseResources {
}
export declare function dataYandexMdbClickhouseClusterClickhouseResourcesToTerraform(struct?: DataYandexMdbClickhouseClusterClickhouseResources): any;
export declare class DataYandexMdbClickhouseClusterClickhouseResourcesOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterClickhouseResources | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterClickhouseResources | undefined);
    get diskSize(): number;
    get diskTypeId(): string;
    get resourcePresetId(): string;
}
export declare class DataYandexMdbClickhouseClusterClickhouseResourcesList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterClickhouseResourcesOutputReference;
}
export interface DataYandexMdbClickhouseClusterClickhouse {
}
export declare function dataYandexMdbClickhouseClusterClickhouseToTerraform(struct?: DataYandexMdbClickhouseClusterClickhouse): any;
export declare class DataYandexMdbClickhouseClusterClickhouseOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterClickhouse | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterClickhouse | undefined);
    private _config;
    get config(): DataYandexMdbClickhouseClusterClickhouseConfigList;
    private _resources;
    get resources(): DataYandexMdbClickhouseClusterClickhouseResourcesList;
}
export declare class DataYandexMdbClickhouseClusterClickhouseList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterClickhouseOutputReference;
}
export interface DataYandexMdbClickhouseClusterDatabase {
}
export declare function dataYandexMdbClickhouseClusterDatabaseToTerraform(struct?: DataYandexMdbClickhouseClusterDatabase): any;
export declare class DataYandexMdbClickhouseClusterDatabaseOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterDatabase | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterDatabase | undefined);
    get name(): string;
}
export declare class DataYandexMdbClickhouseClusterDatabaseList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterDatabaseOutputReference;
}
export interface DataYandexMdbClickhouseClusterFormatSchema {
}
export declare function dataYandexMdbClickhouseClusterFormatSchemaToTerraform(struct?: DataYandexMdbClickhouseClusterFormatSchema): any;
export declare class DataYandexMdbClickhouseClusterFormatSchemaOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterFormatSchema | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterFormatSchema | undefined);
    get name(): string;
    get type(): string;
    get uri(): string;
}
export declare class DataYandexMdbClickhouseClusterFormatSchemaList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterFormatSchemaOutputReference;
}
export interface DataYandexMdbClickhouseClusterHost {
}
export declare function dataYandexMdbClickhouseClusterHostToTerraform(struct?: DataYandexMdbClickhouseClusterHost): any;
export declare class DataYandexMdbClickhouseClusterHostOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterHost | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterHost | undefined);
    get assignPublicIp(): cdktf.IResolvable;
    get fqdn(): string;
    get shardName(): string;
    get subnetId(): string;
    get type(): string;
    get zone(): string;
}
export declare class DataYandexMdbClickhouseClusterHostList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterHostOutputReference;
}
export interface DataYandexMdbClickhouseClusterMaintenanceWindow {
}
export declare function dataYandexMdbClickhouseClusterMaintenanceWindowToTerraform(struct?: DataYandexMdbClickhouseClusterMaintenanceWindow): any;
export declare class DataYandexMdbClickhouseClusterMaintenanceWindowOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterMaintenanceWindow | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterMaintenanceWindow | undefined);
    get day(): string;
    get hour(): number;
    get type(): string;
}
export declare class DataYandexMdbClickhouseClusterMaintenanceWindowList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterMaintenanceWindowOutputReference;
}
export interface DataYandexMdbClickhouseClusterMlModel {
}
export declare function dataYandexMdbClickhouseClusterMlModelToTerraform(struct?: DataYandexMdbClickhouseClusterMlModel): any;
export declare class DataYandexMdbClickhouseClusterMlModelOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterMlModel | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterMlModel | undefined);
    get name(): string;
    get type(): string;
    get uri(): string;
}
export declare class DataYandexMdbClickhouseClusterMlModelList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterMlModelOutputReference;
}
export interface DataYandexMdbClickhouseClusterShardGroup {
}
export declare function dataYandexMdbClickhouseClusterShardGroupToTerraform(struct?: DataYandexMdbClickhouseClusterShardGroup): any;
export declare class DataYandexMdbClickhouseClusterShardGroupOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterShardGroup | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterShardGroup | undefined);
    get description(): string;
    get name(): string;
    get shardNames(): string[];
}
export declare class DataYandexMdbClickhouseClusterShardGroupList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterShardGroupOutputReference;
}
export interface DataYandexMdbClickhouseClusterUserPermission {
}
export declare function dataYandexMdbClickhouseClusterUserPermissionToTerraform(struct?: DataYandexMdbClickhouseClusterUserPermission): any;
export declare class DataYandexMdbClickhouseClusterUserPermissionOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterUserPermission | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterUserPermission | undefined);
    get databaseName(): string;
}
export declare class DataYandexMdbClickhouseClusterUserPermissionList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterUserPermissionOutputReference;
}
export interface DataYandexMdbClickhouseClusterUserQuota {
}
export declare function dataYandexMdbClickhouseClusterUserQuotaToTerraform(struct?: DataYandexMdbClickhouseClusterUserQuota): any;
export declare class DataYandexMdbClickhouseClusterUserQuotaOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterUserQuota | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterUserQuota | undefined);
    get errors(): number;
    get executionTime(): number;
    get intervalDuration(): number;
    get queries(): number;
    get readRows(): number;
    get resultRows(): number;
}
export declare class DataYandexMdbClickhouseClusterUserQuotaList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterUserQuotaOutputReference;
}
export interface DataYandexMdbClickhouseClusterUserSettings {
}
export declare function dataYandexMdbClickhouseClusterUserSettingsToTerraform(struct?: DataYandexMdbClickhouseClusterUserSettings): any;
export declare class DataYandexMdbClickhouseClusterUserSettingsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterUserSettings | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterUserSettings | undefined);
    get addHttpCorsHeader(): cdktf.IResolvable;
    get allowDdl(): cdktf.IResolvable;
    get compile(): cdktf.IResolvable;
    get compileExpressions(): cdktf.IResolvable;
    get connectTimeout(): number;
    get countDistinctImplementation(): string;
    get distinctOverflowMode(): string;
    get distributedAggregationMemoryEfficient(): cdktf.IResolvable;
    get distributedDdlTaskTimeout(): number;
    get distributedProductMode(): string;
    get emptyResultForAggregationByEmptySet(): cdktf.IResolvable;
    get enableHttpCompression(): cdktf.IResolvable;
    get fallbackToStaleReplicasForDistributedQueries(): cdktf.IResolvable;
    get forceIndexByDate(): cdktf.IResolvable;
    get forcePrimaryKey(): cdktf.IResolvable;
    get groupByOverflowMode(): string;
    get groupByTwoLevelThreshold(): number;
    get groupByTwoLevelThresholdBytes(): number;
    get httpConnectionTimeout(): number;
    get httpHeadersProgressInterval(): number;
    get httpReceiveTimeout(): number;
    get httpSendTimeout(): number;
    get inputFormatDefaultsForOmittedFields(): cdktf.IResolvable;
    get inputFormatValuesInterpretExpressions(): cdktf.IResolvable;
    get insertQuorum(): number;
    get insertQuorumTimeout(): number;
    get joinOverflowMode(): string;
    get joinUseNulls(): cdktf.IResolvable;
    get joinedSubqueryRequiresAlias(): cdktf.IResolvable;
    get lowCardinalityAllowInNativeFormat(): cdktf.IResolvable;
    get maxAstDepth(): number;
    get maxAstElements(): number;
    get maxBlockSize(): number;
    get maxBytesBeforeExternalGroupBy(): number;
    get maxBytesBeforeExternalSort(): number;
    get maxBytesInDistinct(): number;
    get maxBytesInJoin(): number;
    get maxBytesInSet(): number;
    get maxBytesToRead(): number;
    get maxBytesToSort(): number;
    get maxBytesToTransfer(): number;
    get maxColumnsToRead(): number;
    get maxExecutionTime(): number;
    get maxExpandedAstElements(): number;
    get maxInsertBlockSize(): number;
    get maxMemoryUsage(): number;
    get maxMemoryUsageForUser(): number;
    get maxNetworkBandwidth(): number;
    get maxNetworkBandwidthForUser(): number;
    get maxQuerySize(): number;
    get maxReplicaDelayForDistributedQueries(): number;
    get maxResultBytes(): number;
    get maxResultRows(): number;
    get maxRowsInDistinct(): number;
    get maxRowsInJoin(): number;
    get maxRowsInSet(): number;
    get maxRowsToGroupBy(): number;
    get maxRowsToRead(): number;
    get maxRowsToSort(): number;
    get maxRowsToTransfer(): number;
    get maxTemporaryColumns(): number;
    get maxTemporaryNonConstColumns(): number;
    get maxThreads(): number;
    get mergeTreeMaxBytesToUseCache(): number;
    get mergeTreeMaxRowsToUseCache(): number;
    get mergeTreeMinBytesForConcurrentRead(): number;
    get mergeTreeMinRowsForConcurrentRead(): number;
    get minBytesToUseDirectIo(): number;
    get minCountToCompile(): number;
    get minCountToCompileExpression(): number;
    get minExecutionSpeed(): number;
    get minExecutionSpeedBytes(): number;
    get minInsertBlockSizeBytes(): number;
    get minInsertBlockSizeRows(): number;
    get outputFormatJsonQuote64BitIntegers(): cdktf.IResolvable;
    get outputFormatJsonQuoteDenormals(): cdktf.IResolvable;
    get priority(): number;
    get quotaMode(): string;
    get readOverflowMode(): string;
    get readonly(): number;
    get receiveTimeout(): number;
    get replicationAlterPartitionsSync(): number;
    get resultOverflowMode(): string;
    get selectSequentialConsistency(): cdktf.IResolvable;
    get sendProgressInHttpHeaders(): cdktf.IResolvable;
    get sendTimeout(): number;
    get setOverflowMode(): string;
    get skipUnavailableShards(): cdktf.IResolvable;
    get sortOverflowMode(): string;
    get timeoutOverflowMode(): string;
    get transferOverflowMode(): string;
    get transformNullIn(): cdktf.IResolvable;
    get useUncompressedCache(): cdktf.IResolvable;
}
export declare class DataYandexMdbClickhouseClusterUserSettingsList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterUserSettingsOutputReference;
}
export interface DataYandexMdbClickhouseClusterUser {
}
export declare function dataYandexMdbClickhouseClusterUserToTerraform(struct?: DataYandexMdbClickhouseClusterUser): any;
export declare class DataYandexMdbClickhouseClusterUserOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterUser | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterUser | undefined);
    get name(): string;
    private _permission;
    get permission(): DataYandexMdbClickhouseClusterUserPermissionList;
    private _quota;
    get quota(): DataYandexMdbClickhouseClusterUserQuotaList;
    private _settings;
    get settings(): DataYandexMdbClickhouseClusterUserSettingsList;
}
export declare class DataYandexMdbClickhouseClusterUserList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterUserOutputReference;
}
export interface DataYandexMdbClickhouseClusterZookeeperResources {
}
export declare function dataYandexMdbClickhouseClusterZookeeperResourcesToTerraform(struct?: DataYandexMdbClickhouseClusterZookeeperResources): any;
export declare class DataYandexMdbClickhouseClusterZookeeperResourcesOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterZookeeperResources | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterZookeeperResources | undefined);
    get diskSize(): number;
    get diskTypeId(): string;
    get resourcePresetId(): string;
}
export declare class DataYandexMdbClickhouseClusterZookeeperResourcesList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterZookeeperResourcesOutputReference;
}
export interface DataYandexMdbClickhouseClusterZookeeper {
}
export declare function dataYandexMdbClickhouseClusterZookeeperToTerraform(struct?: DataYandexMdbClickhouseClusterZookeeper): any;
export declare class DataYandexMdbClickhouseClusterZookeeperOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbClickhouseClusterZookeeper | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterZookeeper | undefined);
    private _resources;
    get resources(): DataYandexMdbClickhouseClusterZookeeperResourcesList;
}
export declare class DataYandexMdbClickhouseClusterZookeeperList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbClickhouseClusterZookeeperOutputReference;
}
export interface DataYandexMdbClickhouseClusterCloudStorage {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_clickhouse_cluster#enabled DataYandexMdbClickhouseCluster#enabled}
    */
    readonly enabled: boolean | cdktf.IResolvable;
}
export declare function dataYandexMdbClickhouseClusterCloudStorageToTerraform(struct?: DataYandexMdbClickhouseClusterCloudStorageOutputReference | DataYandexMdbClickhouseClusterCloudStorage): any;
export declare class DataYandexMdbClickhouseClusterCloudStorageOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): DataYandexMdbClickhouseClusterCloudStorage | undefined;
    set internalValue(value: DataYandexMdbClickhouseClusterCloudStorage | undefined);
    private _enabled?;
    get enabled(): boolean | cdktf.IResolvable;
    set enabled(value: boolean | cdktf.IResolvable);
    get enabledInput(): boolean | cdktf.IResolvable | undefined;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/yandex/d/mdb_clickhouse_cluster yandex_mdb_clickhouse_cluster}
*/
export declare class DataYandexMdbClickhouseCluster extends cdktf.TerraformDataSource {
    static readonly tfResourceType = "yandex_mdb_clickhouse_cluster";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/yandex/d/mdb_clickhouse_cluster yandex_mdb_clickhouse_cluster} Data Source
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataYandexMdbClickhouseClusterConfig = {}
    */
    constructor(scope: Construct, id: string, config?: DataYandexMdbClickhouseClusterConfig);
    private _access;
    get access(): DataYandexMdbClickhouseClusterAccessList;
    private _backupWindowStart;
    get backupWindowStart(): DataYandexMdbClickhouseClusterBackupWindowStartList;
    private _clickhouse;
    get clickhouse(): DataYandexMdbClickhouseClusterClickhouseList;
    private _clusterId?;
    get clusterId(): string;
    set clusterId(value: string);
    resetClusterId(): void;
    get clusterIdInput(): string | undefined;
    get createdAt(): string;
    private _database;
    get database(): DataYandexMdbClickhouseClusterDatabaseList;
    private _deletionProtection?;
    get deletionProtection(): boolean | cdktf.IResolvable;
    set deletionProtection(value: boolean | cdktf.IResolvable);
    resetDeletionProtection(): void;
    get deletionProtectionInput(): boolean | cdktf.IResolvable | undefined;
    get description(): string;
    get embeddedKeeper(): cdktf.IResolvable;
    get environment(): string;
    private _folderId?;
    get folderId(): string;
    set folderId(value: string);
    resetFolderId(): void;
    get folderIdInput(): string | undefined;
    private _formatSchema;
    get formatSchema(): DataYandexMdbClickhouseClusterFormatSchemaList;
    get health(): string;
    private _host;
    get host(): DataYandexMdbClickhouseClusterHostList;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _labels;
    get labels(): cdktf.StringMap;
    private _maintenanceWindow;
    get maintenanceWindow(): DataYandexMdbClickhouseClusterMaintenanceWindowList;
    private _mlModel;
    get mlModel(): DataYandexMdbClickhouseClusterMlModelList;
    private _name?;
    get name(): string;
    set name(value: string);
    resetName(): void;
    get nameInput(): string | undefined;
    get networkId(): string;
    get securityGroupIds(): string[];
    private _serviceAccountId?;
    get serviceAccountId(): string;
    set serviceAccountId(value: string);
    resetServiceAccountId(): void;
    get serviceAccountIdInput(): string | undefined;
    private _shardGroup;
    get shardGroup(): DataYandexMdbClickhouseClusterShardGroupList;
    get sqlDatabaseManagement(): cdktf.IResolvable;
    get sqlUserManagement(): cdktf.IResolvable;
    get status(): string;
    private _user;
    get user(): DataYandexMdbClickhouseClusterUserList;
    get version(): string;
    private _zookeeper;
    get zookeeper(): DataYandexMdbClickhouseClusterZookeeperList;
    private _cloudStorage;
    get cloudStorage(): DataYandexMdbClickhouseClusterCloudStorageOutputReference;
    putCloudStorage(value: DataYandexMdbClickhouseClusterCloudStorage): void;
    resetCloudStorage(): void;
    get cloudStorageInput(): DataYandexMdbClickhouseClusterCloudStorage | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
