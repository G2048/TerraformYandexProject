import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface DataYandexMdbKafkaConnectorConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_kafka_connector#cluster_id DataYandexMdbKafkaConnector#cluster_id}
    */
    readonly clusterId: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_kafka_connector#id DataYandexMdbKafkaConnector#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/d/mdb_kafka_connector#name DataYandexMdbKafkaConnector#name}
    */
    readonly name: string;
}
export interface DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster {
}
export declare function dataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalClusterToTerraform(struct?: DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster): any;
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster | undefined;
    set internalValue(value: DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster | undefined);
    get bootstrapServers(): string;
    get saslMechanism(): string;
    get saslPassword(): string;
    get saslUsername(): string;
    get securityProtocol(): string;
}
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalClusterList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalClusterOutputReference;
}
export interface DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster {
}
export declare function dataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisClusterToTerraform(struct?: DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster): any;
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster | undefined;
    set internalValue(value: DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster | undefined);
}
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisClusterList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisClusterOutputReference;
}
export interface DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceCluster {
}
export declare function dataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterToTerraform(struct?: DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceCluster): any;
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceCluster | undefined;
    set internalValue(value: DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceCluster | undefined);
    get alias(): string;
    private _externalCluster;
    get externalCluster(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalClusterList;
    private _thisCluster;
    get thisCluster(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisClusterList;
}
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterOutputReference;
}
export interface DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster {
}
export declare function dataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalClusterToTerraform(struct?: DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster): any;
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster | undefined;
    set internalValue(value: DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster | undefined);
    get bootstrapServers(): string;
    get saslMechanism(): string;
    get saslPassword(): string;
    get saslUsername(): string;
    get securityProtocol(): string;
}
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalClusterList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalClusterOutputReference;
}
export interface DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster {
}
export declare function dataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisClusterToTerraform(struct?: DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster): any;
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster | undefined;
    set internalValue(value: DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster | undefined);
}
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisClusterList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisClusterOutputReference;
}
export interface DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetCluster {
}
export declare function dataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterToTerraform(struct?: DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetCluster): any;
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetCluster | undefined;
    set internalValue(value: DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetCluster | undefined);
    get alias(): string;
    private _externalCluster;
    get externalCluster(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalClusterList;
    private _thisCluster;
    get thisCluster(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisClusterList;
}
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterOutputReference;
}
export interface DataYandexMdbKafkaConnectorConnectorConfigMirrormaker {
}
export declare function dataYandexMdbKafkaConnectorConnectorConfigMirrormakerToTerraform(struct?: DataYandexMdbKafkaConnectorConnectorConfigMirrormaker): any;
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): DataYandexMdbKafkaConnectorConnectorConfigMirrormaker | undefined;
    set internalValue(value: DataYandexMdbKafkaConnectorConnectorConfigMirrormaker | undefined);
    get replicationFactor(): number;
    private _sourceCluster;
    get sourceCluster(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerSourceClusterList;
    private _targetCluster;
    get targetCluster(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerTargetClusterList;
    get topics(): string;
}
export declare class DataYandexMdbKafkaConnectorConnectorConfigMirrormakerList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerOutputReference;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/yandex/d/mdb_kafka_connector yandex_mdb_kafka_connector}
*/
export declare class DataYandexMdbKafkaConnector extends cdktf.TerraformDataSource {
    static readonly tfResourceType = "yandex_mdb_kafka_connector";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/yandex/d/mdb_kafka_connector yandex_mdb_kafka_connector} Data Source
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataYandexMdbKafkaConnectorConfig
    */
    constructor(scope: Construct, id: string, config: DataYandexMdbKafkaConnectorConfig);
    private _clusterId?;
    get clusterId(): string;
    set clusterId(value: string);
    get clusterIdInput(): string | undefined;
    private _connectorConfigMirrormaker;
    get connectorConfigMirrormaker(): DataYandexMdbKafkaConnectorConnectorConfigMirrormakerList;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    private _properties;
    get properties(): cdktf.StringMap;
    get tasksMax(): number;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
