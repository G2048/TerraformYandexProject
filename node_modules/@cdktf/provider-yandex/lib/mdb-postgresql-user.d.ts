import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface MdbPostgresqlUserConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#cluster_id MdbPostgresqlUser#cluster_id}
    */
    readonly clusterId: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#conn_limit MdbPostgresqlUser#conn_limit}
    */
    readonly connLimit?: number;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#grants MdbPostgresqlUser#grants}
    */
    readonly grants?: string[];
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#id MdbPostgresqlUser#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#login MdbPostgresqlUser#login}
    */
    readonly login?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#name MdbPostgresqlUser#name}
    */
    readonly name: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#password MdbPostgresqlUser#password}
    */
    readonly password: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#settings MdbPostgresqlUser#settings}
    */
    readonly settings?: {
        [key: string]: string;
    };
    /**
    * permission block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#permission MdbPostgresqlUser#permission}
    */
    readonly permission?: MdbPostgresqlUserPermission[] | cdktf.IResolvable;
    /**
    * timeouts block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#timeouts MdbPostgresqlUser#timeouts}
    */
    readonly timeouts?: MdbPostgresqlUserTimeouts;
}
export interface MdbPostgresqlUserPermission {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#database_name MdbPostgresqlUser#database_name}
    */
    readonly databaseName: string;
}
export declare function mdbPostgresqlUserPermissionToTerraform(struct?: MdbPostgresqlUserPermission | cdktf.IResolvable): any;
export declare class MdbPostgresqlUserPermissionOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param complexObjectIndex the index of this item in the list
    * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean);
    get internalValue(): MdbPostgresqlUserPermission | cdktf.IResolvable | undefined;
    set internalValue(value: MdbPostgresqlUserPermission | cdktf.IResolvable | undefined);
    private _databaseName?;
    get databaseName(): string;
    set databaseName(value: string);
    get databaseNameInput(): string | undefined;
}
export declare class MdbPostgresqlUserPermissionList extends cdktf.ComplexList {
    protected terraformResource: cdktf.IInterpolatingParent;
    protected terraformAttribute: string;
    protected wrapsSet: boolean;
    internalValue?: MdbPostgresqlUserPermission[] | cdktf.IResolvable;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, wrapsSet: boolean);
    /**
    * @param index the index of the item to return
    */
    get(index: number): MdbPostgresqlUserPermissionOutputReference;
}
export interface MdbPostgresqlUserTimeouts {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#create MdbPostgresqlUser#create}
    */
    readonly create?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#delete MdbPostgresqlUser#delete}
    */
    readonly delete?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#read MdbPostgresqlUser#read}
    */
    readonly read?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user#update MdbPostgresqlUser#update}
    */
    readonly update?: string;
}
export declare function mdbPostgresqlUserTimeoutsToTerraform(struct?: MdbPostgresqlUserTimeoutsOutputReference | MdbPostgresqlUserTimeouts | cdktf.IResolvable): any;
export declare class MdbPostgresqlUserTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    private resolvableValue?;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): MdbPostgresqlUserTimeouts | cdktf.IResolvable | undefined;
    set internalValue(value: MdbPostgresqlUserTimeouts | cdktf.IResolvable | undefined);
    private _create?;
    get create(): string;
    set create(value: string);
    resetCreate(): void;
    get createInput(): string | undefined;
    private _delete?;
    get delete(): string;
    set delete(value: string);
    resetDelete(): void;
    get deleteInput(): string | undefined;
    private _read?;
    get read(): string;
    set read(value: string);
    resetRead(): void;
    get readInput(): string | undefined;
    private _update?;
    get update(): string;
    set update(value: string);
    resetUpdate(): void;
    get updateInput(): string | undefined;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user yandex_mdb_postgresql_user}
*/
export declare class MdbPostgresqlUser extends cdktf.TerraformResource {
    static readonly tfResourceType = "yandex_mdb_postgresql_user";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/yandex/r/mdb_postgresql_user yandex_mdb_postgresql_user} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options MdbPostgresqlUserConfig
    */
    constructor(scope: Construct, id: string, config: MdbPostgresqlUserConfig);
    private _clusterId?;
    get clusterId(): string;
    set clusterId(value: string);
    get clusterIdInput(): string | undefined;
    private _connLimit?;
    get connLimit(): number;
    set connLimit(value: number);
    resetConnLimit(): void;
    get connLimitInput(): number | undefined;
    private _grants?;
    get grants(): string[];
    set grants(value: string[]);
    resetGrants(): void;
    get grantsInput(): string[] | undefined;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _login?;
    get login(): boolean | cdktf.IResolvable;
    set login(value: boolean | cdktf.IResolvable);
    resetLogin(): void;
    get loginInput(): boolean | cdktf.IResolvable | undefined;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    private _password?;
    get password(): string;
    set password(value: string);
    get passwordInput(): string | undefined;
    private _settings?;
    get settings(): {
        [key: string]: string;
    };
    set settings(value: {
        [key: string]: string;
    });
    resetSettings(): void;
    get settingsInput(): {
        [key: string]: string;
    } | undefined;
    private _permission;
    get permission(): MdbPostgresqlUserPermissionList;
    putPermission(value: MdbPostgresqlUserPermission[] | cdktf.IResolvable): void;
    resetPermission(): void;
    get permissionInput(): cdktf.IResolvable | MdbPostgresqlUserPermission[] | undefined;
    private _timeouts;
    get timeouts(): MdbPostgresqlUserTimeoutsOutputReference;
    putTimeouts(value: MdbPostgresqlUserTimeouts): void;
    resetTimeouts(): void;
    get timeoutsInput(): cdktf.IResolvable | MdbPostgresqlUserTimeouts | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
